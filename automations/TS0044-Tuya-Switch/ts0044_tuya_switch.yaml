blueprint:
  name: Zigbee2MQTT 2.0 - Tuya 4-Button Scene Switch (with button selection)
  description: |
    Automate your Tuya 4-Button Scene Switch via Zigbee2MQTT.
    Original version: https://community.home-assistant.io/t/zigbee2mqtt-tuya-4-button-scene-switch-ts0044/274735/164
    This version: https://github.com/ShadowBelmolve/home-assistant-blueprints/blob/main/automations/TS0044-Tuya-Switch/ts0044_tuya_switch.yaml
  domain: automation
  author: "Panoplian, ShadowBelmolve"
  input:
    upper_left_button_number:
      name: Upper-Left button action
      description: Action of the Upper-Left button.
      default: "1"
      selector: &buttonSelector
        select:
          mode: dropdown
          options:
            - label: Action 1
              value: "1"
            - label: Action 2
              value: "2"
            - label: Action 3
              value: "3"
            - label: Action 4
              value: "4"
    upper_right_button_number:
      name: Upper-Right button action
      description: Action of the Upper-Right button.
      default: "2"
      selector: *buttonSelector

    bottom_left_button_number:
      name: Bottom-Left button action
      description: Action of the Bottom-Left button.
      default: "3"
      selector: *buttonSelector

    bottom_right_button_number:
      name: Bottom-Right button action
      description: Action of the Bottom-Right button.
      default: "4"
      selector: *buttonSelector

    switch:
      name: Tuya 4-Button Scene Switch
      description: Select the Tuya 4-Button Scene Switch to use
      selector:
        device:
          integration: mqtt

    # Button 1 Actions
    button_upper_left_short_press:
      name: Single Press - Upper-Left
      description: Action to run on upper-left button single press
      default: []
      selector:
        action: {}
    button_upper_left_double_press:
      name: Double Press - Upper-Left
      description: Action to run on upper-left button double press
      default: []
      selector:
        action: {}
    button_upper_left_long_press:
      name: Long Press - Upper-Left
      description: Action to run on upper-left button long press
      default: []
      selector:
        action: {}

    # Button 2 Actions
    button_upper_right_short_press:
      name: Single Press - Upper-Right
      description: Action to run on upper-right button single press
      default: []
      selector:
        action: {}
    button_upper_right_double_press:
      name: Double Press - Upper-Right
      description: Action to run on upper-right button double press
      default: []
      selector:
        action: {}
    button_upper_right_long_press:
      name: Long Press - Upper-Right
      description: Action to run on upper-right button long press
      default: []
      selector:
        action: {}

    # Button 3 Actions
    button_bottom_left_short_press:
      name: Single Press - Bottom-Left
      description: Action to run on bottom-left button single press
      default: []
      selector:
        action: {}
    button_bottom_left_double_press:
      name: Double Press - Bottom-Left
      description: Action to run on bottom-left button double press
      default: []
      selector:
        action: {}
    button_bottom_left_long_press:
      name: Long Press - Bottom-Left
      description: Action to run on bottom-left button long press
      default: []
      selector:
        action: {}

    # Button 4 Actions
    button_bottom_right_short_press:
      name: Single Press - Bottom-Right
      description: Action to run on bottom-right button single press
      default: []
      selector:
        action: {}
    button_bottom_right_double_press:
      name: Double Press - Bottom-Right
      description: Action to run on bottom-right button double press
      default: []
      selector:
        action: {}
    button_bottom_right_long_press:
      name: Long Press - Bottom-Right
      description: Action to run on bottom-right button long press
      default: []
      selector:
        action: {}

trigger:
  # Button 1 Triggers
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 1_single
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 1_double
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 1_hold

  # Button 2 Triggers
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 2_single
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 2_double
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 2_hold

  # Button 3 Triggers
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 3_single
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 3_double
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 3_hold

  # Button 4 Triggers
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 4_single
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 4_double
  - platform: device
    device_id: !input switch
    domain: mqtt
    type: action
    subtype: 4_hold

action:
  - variables:
      upper_left_button_number: !input upper_left_button_number
      upper_right_button_number: !input upper_right_button_number
      bottom_left_button_number: !input bottom_left_button_number
      bottom_right_button_number: !input bottom_right_button_number
      command: |
        {{
          trigger.payload
            | regex_replace(find=upper_left_button_number, replace='upper_left')
            | regex_replace(find=upper_right_button_number, replace='upper_right')
            | regex_replace(find=bottom_left_button_number, replace='bottom_left')
            | regex_replace(find=bottom_right_button_number, replace='bottom_right')
        }}

  - choose:
      - conditions:
          - "{{ command == 'upper_left_single' }}"
        sequence: !input button_upper_left_short_press
      - conditions:
          - "{{ command == 'upper_right_single' }}"
        sequence: !input button_upper_right_short_press
      - conditions:
          - "{{ command == 'bottom_left_single' }}"
        sequence: !input button_bottom_left_short_press
      - conditions:
          - "{{ command == 'bottom_right_single' }}"
        sequence: !input button_bottom_right_short_press
      - conditions:
          - "{{ command == 'upper_left_double' }}"
        sequence: !input button_upper_left_double_press
      - conditions:
          - "{{ command == 'upper_right_double' }}"
        sequence: !input button_upper_right_double_press
      - conditions:
          - "{{ command == 'bottom_left_double' }}"
        sequence: !input button_bottom_left_double_press
      - conditions:
          - "{{ command == 'bottom_right_double' }}"
        sequence: !input button_bottom_right_double_press
      - conditions:
          - "{{ command == 'upper_left_hold' }}"
        sequence: !input button_upper_left_long_press
      - conditions:
          - "{{ command == 'upper_right_hold' }}"
        sequence: !input button_upper_right_long_press
      - conditions:
          - "{{ command == 'bottom_left_hold' }}"
        sequence: !input button_bottom_left_long_press
      - conditions:
          - "{{ command == 'bottom_right_hold' }}"
        sequence: !input button_bottom_right_long_press

mode: parallel
max: 5
max_exceeded: warning

